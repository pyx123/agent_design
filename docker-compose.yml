version: '3.8'

services:
  devops-agent:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: devops-agent
    ports:
      - "8000:8000"  # API
      - "9090:9090"  # Metrics
    environment:
      - API_ENV=production
      - DATABASE_URL=sqlite:///data/devops_agent.db
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - MCP_LOGS_SERVER_URL=${MCP_LOGS_SERVER_URL:-http://mcp-logs:8081}
      - MCP_METRICS_SERVER_URL=${MCP_METRICS_SERVER_URL:-http://mcp-metrics:8082}
      - MCP_ALERTS_SERVER_URL=${MCP_ALERTS_SERVER_URL:-http://mcp-alerts:8083}
      - MCP_LOGS_TOKEN=${MCP_LOGS_TOKEN}
      - MCP_METRICS_TOKEN=${MCP_METRICS_TOKEN}
      - MCP_ALERTS_TOKEN=${MCP_ALERTS_TOKEN}
      - SECRET_KEY=${SECRET_KEY:-change-me-in-production}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - devops-agent-network
    restart: unless-stopped
    depends_on:
      - mcp-logs
      - mcp-metrics
      - mcp-alerts

  # Mock MCP servers for development/testing
  mcp-logs:
    image: mockserver/mockserver:latest
    container_name: mcp-logs
    ports:
      - "8081:1080"
    environment:
      - MOCKSERVER_PROPERTY_FILE=/config/mockserver.properties
      - MOCKSERVER_INITIALIZATION_JSON_PATH=/config/logs-mock.json
    volumes:
      - ./config/mcp-mocks:/config
    networks:
      - devops-agent-network

  mcp-metrics:
    image: mockserver/mockserver:latest
    container_name: mcp-metrics
    ports:
      - "8082:1080"
    environment:
      - MOCKSERVER_PROPERTY_FILE=/config/mockserver.properties
      - MOCKSERVER_INITIALIZATION_JSON_PATH=/config/metrics-mock.json
    volumes:
      - ./config/mcp-mocks:/config
    networks:
      - devops-agent-network

  mcp-alerts:
    image: mockserver/mockserver:latest
    container_name: mcp-alerts
    ports:
      - "8083:1080"
    environment:
      - MOCKSERVER_PROPERTY_FILE=/config/mockserver.properties
      - MOCKSERVER_INITIALIZATION_JSON_PATH=/config/alerts-mock.json
    volumes:
      - ./config/mcp-mocks:/config
    networks:
      - devops-agent-network

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - devops-agent-network
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - devops-agent-network
    profiles:
      - monitoring

networks:
  devops-agent-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: